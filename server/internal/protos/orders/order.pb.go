// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: order.proto

package orders

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OrderRequest represents a request to place a trading order
type OrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`                                // Stock symbol (e.g., "AAPL")
	Qty           string                 `protobuf:"bytes,2,opt,name=qty,proto3" json:"qty,omitempty"`                                      // Quantity as string to support decimals
	Side          string                 `protobuf:"bytes,3,opt,name=side,proto3" json:"side,omitempty"`                                    // "buy" or "sell"
	OrderType     string                 `protobuf:"bytes,4,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`         // "market", "limit", "stop", "stop_limit"
	TimeInForce   string                 `protobuf:"bytes,5,opt,name=time_in_force,json=timeInForce,proto3" json:"time_in_force,omitempty"` // "day", "gtc", "ioc", "fok"
	LimitPrice    string                 `protobuf:"bytes,6,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`      // Optional: limit price for limit orders
	StopPrice     string                 `protobuf:"bytes,7,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"`         // Optional: stop price for stop orders
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	mi := &file_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *OrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderRequest) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *OrderRequest) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *OrderRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *OrderRequest) GetTimeInForce() string {
	if x != nil {
		return x.TimeInForce
	}
	return ""
}

func (x *OrderRequest) GetLimitPrice() string {
	if x != nil {
		return x.LimitPrice
	}
	return ""
}

func (x *OrderRequest) GetStopPrice() string {
	if x != nil {
		return x.StopPrice
	}
	return ""
}

// OrderResponse represents the response after placing an order
type OrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                              // "success" or "error"
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`             // Alpaca order ID
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                            // Optional error message or additional info
	Symbol        string                 `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`                              // Echo back the symbol
	Qty           string                 `protobuf:"bytes,5,opt,name=qty,proto3" json:"qty,omitempty"`                                    // Echo back the quantity
	Side          string                 `protobuf:"bytes,6,opt,name=side,proto3" json:"side,omitempty"`                                  // Echo back the side
	FilledQty     string                 `protobuf:"bytes,7,opt,name=filled_qty,json=filledQty,proto3" json:"filled_qty,omitempty"`       // Quantity filled so far
	OrderStatus   string                 `protobuf:"bytes,8,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"` // Alpaca order status: "new", "filled", "partially_filled", etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	mi := &file_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *OrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderResponse) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *OrderResponse) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *OrderResponse) GetFilledQty() string {
	if x != nil {
		return x.FilledQty
	}
	return ""
}

func (x *OrderResponse) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

var File_order_proto protoreflect.FileDescriptor

const file_order_proto_rawDesc = "" +
	"\n" +
	"\vorder.proto\x12\x06orders\"\xcf\x01\n" +
	"\fOrderRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x10\n" +
	"\x03qty\x18\x02 \x01(\tR\x03qty\x12\x12\n" +
	"\x04side\x18\x03 \x01(\tR\x04side\x12\x1d\n" +
	"\n" +
	"order_type\x18\x04 \x01(\tR\torderType\x12\"\n" +
	"\rtime_in_force\x18\x05 \x01(\tR\vtimeInForce\x12\x1f\n" +
	"\vlimit_price\x18\x06 \x01(\tR\n" +
	"limitPrice\x12\x1d\n" +
	"\n" +
	"stop_price\x18\a \x01(\tR\tstopPrice\"\xdc\x01\n" +
	"\rOrderResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x16\n" +
	"\x06symbol\x18\x04 \x01(\tR\x06symbol\x12\x10\n" +
	"\x03qty\x18\x05 \x01(\tR\x03qty\x12\x12\n" +
	"\x04side\x18\x06 \x01(\tR\x04side\x12\x1d\n" +
	"\n" +
	"filled_qty\x18\a \x01(\tR\tfilledQty\x12!\n" +
	"\forder_status\x18\b \x01(\tR\vorderStatusB%Z#trading-desk/internal/protos/ordersb\x06proto3"

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData []byte
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_order_proto_rawDesc), len(file_order_proto_rawDesc)))
	})
	return file_order_proto_rawDescData
}

var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_order_proto_goTypes = []any{
	(*OrderRequest)(nil),  // 0: orders.OrderRequest
	(*OrderResponse)(nil), // 1: orders.OrderResponse
}
var file_order_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_order_proto_rawDesc), len(file_order_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
